/// <reference lib="webworker" />

import { clientsClaim } from 'workbox-core';
import type { WorkboxPlugin } from 'workbox-core';
import { precacheAndRoute, createHandlerBoundToURL } from 'workbox-precaching';
import { registerRoute, NavigationRoute } from 'workbox-routing';
import { CacheFirst, StaleWhileRevalidate } from 'workbox-strategies';
import { CacheableResponsePlugin } from 'workbox-cacheable-response';
import { ExpirationPlugin } from 'workbox-expiration';

declare const self: ServiceWorkerGlobalScope;

// Take control immediately
clientsClaim();

// Precache all assets generated by your build process
precacheAndRoute(self.__WB_MANIFEST);

// Handle navigation routes with a network-first strategy
registerRoute(
  new NavigationRoute(createHandlerBoundToURL('/index.html'))
);

// Create plugins with explicit type casting
const cacheableResponsePlugin = new CacheableResponsePlugin({
  statuses: [0, 200],
}) as WorkboxPlugin;

const expirationPlugin = new ExpirationPlugin({
  maxEntries: 60,
  maxAgeSeconds: 30 * 24 * 60 * 60, // 30 days
}) as WorkboxPlugin;

// Cache images with a cache-first strategy
registerRoute(
  ({ request }) => request.destination === 'image',
  new CacheFirst({
    cacheName: 'images',
    plugins: [cacheableResponsePlugin, expirationPlugin],
  }),
);

// Cache other assets with stale-while-revalidate
registerRoute(
  ({ request }) =>
    request.destination === 'script' ||
    request.destination === 'style' ||
    request.destination === 'font',
  new StaleWhileRevalidate({
    cacheName: 'static-resources',
  }),
); 